																					BASH (Bourne Again Shell)




						   BOURNE AGAIN SHELL
						GENERAL COMMANDS MANUAL



NOTE: used [command] --help or man [command], to view all information
	example: 
		man echo
		echo --help	


#		Comment


${BASH_VERSION}	Check Bash version

wget URL	Download file
		Example:
		
			Downloading Sublime Text (Debian 'Kali Linux')
				wget http://c758482.r82.cf2.rackcdn.com/sublime-text_build-3047_i386.deb
			
			Installing Sublime Text
				sudo dpkg -i sublime-text_build-3047_i386.deb
			
			To open / run Sublime Text
				subl	
				
				
				
				
sudo		Run as root user

#!/bin/bash	Shebang line



alias		Create an alias,substitute a command to a simple word
		Syntax:
					
			alias alias_name="command"
				Create a new alias
								
			alias		
				Display all created aliases
								
			alias -p
				Display all created aliases



unalias		Delete an alias
		Syntax:
					
			unalias alias_name
				Remove specified alias
							
			unalias -a
				Remove all aliases
								
								
								
awk		Search files for lines (or other units of text) that contain a pattern
		Syntax:
							
			awk '{print $0}'
							
			awk '${print $1}'
							
			awk '${print $3}'
							
							
							
cat		Display content of text file on the screen
		Syntax:
					
			cat <filename>
				Display content of file on the screen
			
			
			
cd		Change Directory
		Syntax:
				
			cd				
				Change from previous directory to the home directory

			cd ~			
				Change from previous directory to the home directory

			cd ..			
				Change from previous directory to the parent directory 

			cd -			
				Change from current directory to the previous directory



chmod		Change permission mode of a file or directory
		Syntax:
		
			chmod ugo=- *
				Remove permission to all (user, group, other) files and directory
			
			chmod a=- *
				Remove permission to all (user, group, other) files and directory
				
			chmod 0
				Remove permission to all (user, group, other) files and directory
			
			
			chmod a=rwx
				Add read, write and execute permission to user, group and other
				
			chmod g=r
				Add read permission to group
			
			chmod g=-r
				Remove read permission to group
			
			chmod u=r,g=w,o=x *
				Add read permission to user, write permission to group, and execute permission to others
			
			chmod -R a=rw *
				Add read and write permission to all files, directories, subdirectories
				
				
		[Permission mode]:
			
			rwx	7	read, write and execute permission
			rw	6	read and write permission
			rx	5	read and execute permission
			r	4	read permission
			wx	3	write and execute permission
			w	2	write permission
			x	1	execute permission
			- 	0	remove permission (clear permission)
		
			+ 	add permission
			-	remove permission
			
			u	user
			g	group
			o	other
			a	all
			
			
			
clear		Clear screen
		Syntax:
		
			clear



cp		Copy files and directory
		Syntax:
		
			cp <source> <destination>
				copy file or directory from source to destination
				
			cp -r <source> <destination>
				copy directory recursively including the subdirectory and file
				
			cp -var <source> <destination>
				copy files or directory, preserved the attributes and verbose (explain what is done)
			
			cp -a <source> <destination>
				copy files or directory, preserved the attributes 
		
		
				
mv		Move (rename) a file
		Syntax:
		
			mv <source_filename> <destination_filename
				move file / directory to destination
				
			mv <old_filename> <new_filename>
				rename filename
				
			mv <old_directory_name> <new_directory_name>
				rename directory name
				
		
		
rm		Remove file or directory
		Syntax:
			
			rm <filename>
				delete specified file
				
			rm <filename> <filename>
				delete specified files
				
			rm -fr
				delete files and subdirectories
				
			rm -rf
				delete files and subdirectories
				
			rm -r
				delete directories and their contents recursively including [subdirectories and content]
				
				

rmdir		Remove the DIRECTORY(ies), if they are empty.		
		Syntax:
		
			rmdir <directory_name>
				delete directory, if they are empty
				
			rmdir <directory_name> <directory_name>
				delete directories, if they are empty
				
				
				
mkdir		Make directories
		Syntax:
			
			mkdir <directory_name>
				make directory
				
			mkdir <directory_name> <directory_name>
				make directory
			
			mkdir -p <directory_name/subdirectory_name>
				no error if existing, make parent directories as needed
				If the subdirectory is not existing, it will create a subdirectory



echo		Display a line of text
		Syntax:
						
			echo "" > filename
				Create an empty file, clear the content of a file
							
			echo > filename
				Create an empty file, clear the content of a file
									
			echo "sample text" > filename
				Create a file with a content
									
			echo "some text here" >> filename
				Append to the previous content of the file
							
			echo -n "sample text"
				Do not output trailing newlines
							
			echo -e "\n\t\ "
				enable interpretation of backslashes escape (escape characters)
							
			echo $(< filename)
				Display content of a file
							
			echo '#!/bin/bash'
				Display'#!/bin/bash (Shebang Line)
				
				
							
grep		print lines matching a pattern
		Syntax:
							
			grep <Pattern>
				Search for a pattern, used "|" pipe

			grep <Pattern> <filename>
				Search for a pattern in a file
				
			grep -x "exact_word"
				Search and display that match exactly to the pattern
			
			grep --only-matching "pattern"
				
			
			
			grep --count "pattern"
				Count total match to the pattern
				
			grep --ignore-case "pattern"
				Search and display match to the pattern and ignore case sensitivity of the pattern given
				
			
								
								
head		Print the first 10 lines of a file
		Syntax:
			
			head <filename>
				print the first 10 lines of a file
			
			head -1 <filename>
				print the first line of a file
			
			head -5 <filename>
				print the first 5 lines of a file
			
			head -20 <filename>
				print the first 20 lines of a file
				
			head -20 file1 file2
				print the first 20 lines of the files
			
			head file1 file
				print the first 10 lines of the files including the header (filename)
				
			head -q file1
				print the first 10 lines of the files without the header (filename)
				
				
				
tail		Output the last part of files
		Syntax:
			
			tail -q file
				never output headers giving file names
				output the last 10 lines of file
			
			tails -q file1 file2
				never output headers giving file names
				output the last 10 lines of files
			
			tail -5 file
				output the last 5 lines of file
				
				
				
history		Display all executed commands in shell
		Syntax:
							
			history
			
			
			
ls		List directory content
		Syntax:
		
			ls -l
				List directory content using long list format
				
			ls -R
				List subdirectories recursively
				
			ls -r	
				List directory content in reverse order (sort in reverse order)
				
			ls -t
				List directory content, sorted by modification time, newest first
				

			ls -a
				 Do not ignore entries starting with .
				 List all content of the directory (including . and ..)
				 
				 
			ls -A
				Do not list implied . and ..
				List all content of the directory (do not include . and ..)
				
	
			ls -Rrt
				List all content of the directory from oldest to newest modification time and the content of the subdirectories
				
			
			
			ls 
				List all content of the directory [Default]

				
				
pwd		print name of (absolute) current/working directory
		Syntax:
		
			pwd	
		
		
		
expr


tr		Substitute
		Syntax:
		
			tr [:upper:] [:lower:]
				Substitute uppercase character into lowercase
			
			tr [:lower:] [:upper:]
				Substitute uppercase character into lowercase
			
			tr "character_to_be_replaced" "replacement_of_character"
				Substitute characters
				
				

================================================================================================================================

						CONTROL STRUCTURES			
					
Integer comparison
-eq	equal
-ne	not equal
-lt	less than
-gt	greater than
-ge	greater than or equal
-le	less than or equal





For loop
	
	
	for i in $(seq 1 50)
	do
		echo "$i"
	done
	
	
	
	for i in `seq 1 50`
	do
		echo "$i"
	done
	
	
	
	for i in $(linux_command)
	do
		echo "$i"
	done
	
	
	example:
	
	for i in $(ls)
	do
		echo "Files: $i"
	done
	
	
	
	
	
	
	
While loop

	ctr=0
	
	#Display multiples of 3
	while [[ $ctr -le 50 ]]
	do
		ctr=`expr $ctr + 3`
		echo "$ctr"
	done
	







# C: Do while loop
until loop

	# continue looping (if condition is False) until the condition is true
	
	x=50
	echo "Multiples of 3"
	
	
	until [[ $x -lt 0 ]]
	do
		x=`expr $x - 1`
		if [[ `expr $x % 3` -eq 0 ]]; then
			echo "$x"
		fi
	done	
	
	

	x=0
	echo "Multiples of 5"

	until [[ $x -ge 50 ]]
	do

		x=`expr $x + 5`
		echo "$x"

	done	
	echo 	
	





case
	
	
	case $var in
		option ) action;;
		* ) default_action;;
	esac
	
	
	
	
	
if
	
	
	if [[ condition ]]
	then
	
	fi
	
	if [[ condition ]]; then
	
	fi
	





if..else if..else
	
	if [[ condition ]]; then
	
	elif [[ condition ]]; then
	
	else
	
	fi
	
	
	
	
	
	
if..else

	if [[ condition ]]; then
	
	else
	
	fi
	




=================================================================================================================================

Regular Expression (RegEx)

[0-9]
[0-9]+$
[:alnum:]
[:alpha:]
[:upper:]
[:lower:]
[:digit:]
[:blank:]

=================================================================================================================================

sudo apt-get update



